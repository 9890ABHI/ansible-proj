---
- name: Install and Configure Slurm on EC2 Instances
  hosts: localhost
  gather_facts: no  # No need to gather facts on localhost
  vars_files:
    - "../compute_details.json"
  tasks:
    - name: Load compute details
      set_fact:
        compute_details: "{{ lookup('file', '../compute_details.json') | from_json }}"

    - name: Set up dynamic inventory
      set_fact:
        inventory: "{{ compute_details | map(attribute='private_ip') | list }}"

    - name: Remove old SSH host keys
      command: ssh-keygen -f '/root/.ssh/known_hosts' -R "{{ item }}"
      loop: "{{ inventory }}"
      ignore_errors: yes
      delegate_to: localhost

    - name: Ensure all instances are reachable
      wait_for:
        host: "{{ item }}"
        port: 22
        state: started
        delay: 10
      loop: "{{ inventory }}"
      delegate_to: localhost

    - name: Test SSH connectivity
      command: ssh -o StrictHostKeyChecking=no -i /root/.ssh/boot-1.pem ubuntu@{{ item }} echo "Connected"
      register: ssh_test
      ignore_errors: yes
      loop: "{{ inventory }}"
      delegate_to: localhost

    - name: Print SSH connectivity results
      debug:
        msg: "{{ ssh_test.results }}"

# - name: Configure EC2 Instances
#   hosts: all
#   become: yes
#   gather_facts: yes

#   tasks:
    - name: Add instance details to /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ item.private_ip }} {{ item.hostname }}"
        state: present
      loop: "{{ compute_details }}"
      become: yes

    - name: Set hostname based on private IP for each instance
      hostname:
        name: "{{ ansible_host }}"  # Use ansible_host instead of inventory_hostname

    - name: Ensure hostname is applied
      shell: "hostnamectl set-hostname {{ ansible_host }}"
      args:
        executable: /bin/bash







# ---
# - name: Install and Configure Slurm on EC2 Instances
#   hosts: localhost
#   gather_facts: yes
#   vars_files:
#     - "../compute_details.json"
#   tasks:
#     - name: Load compute details
#       set_fact:
#         compute_details: "{{ lookup('file', '../compute_details.json') | from_json }}"

#     - name: Set up dynamic inventory
#       set_fact:
#         inventory: "{{ compute_details | map(attribute='private_ip') | list }}"

#     - name: Remove old SSH host keys
#       command: ssh-keygen -f '/root/.ssh/known_hosts' -R "{{ item }}"
#       loop: "{{ inventory }}"
#       ignore_errors: yes
#       delegate_to: localhost

#     - name: Ensure all instances are reachable
#       wait_for:
#         host: "{{ item }}"
#         port: 22
#         state: started
#         delay: 10
#       loop: "{{ inventory }}"
#       delegate_to: localhost

#     - name: Test SSH connectivity
#       command: ssh -o StrictHostKeyChecking=no -i /root/.ssh/boot-1.pem ubuntu@{{ item }} echo "Connected"
#       register: ssh_test
#       ignore_errors: yes
#       loop: "{{ inventory }}"
#       delegate_to: localhost

#     - name: Print SSH connectivity results
#       debug:
#         msg: "{{ ssh_test.results }}"

# - name: Configure EC2 Instances
#   hosts: all
#   become: yes
#   gather_facts: yes

#   tasks:
#     - name: Add instance details to /etc/hosts
#       lineinfile:
#         path: /etc/hosts
#         line: "{{ item.private_ip }} {{ item.hostname }}"
#         state: present
#       loop: "{{ compute_details }}"
#       become: yes

#     - name: Set hostname based on private IP for each instance
#       hostname:
#         name: "{{ inventory_hostname }}"

#     - name: Ensure hostname is applied
#       shell: "hostnamectl set-hostname {{ inventory_hostname }}"
#       args:
#         executable: /bin/bash
