---
 - name: Install and Configure Slurm on EC2 Instances
   hosts: localhost
   gather_facts: yes
   vars_files:
     - "../compute_details.json"
   tasks:
     - name: Load compute details
       set_fact:
         compute_details: "{{ lookup('file', '../compute_details.json') | from_json }}"

     - name: Set up dynamic inventory
       set_fact:
         inventory: "{{ compute_details | map(attribute='private_ip') | list }}"

     - name: Remove old SSH host keys
       command: ssh-keygen -f '/root/.ssh/known_hosts' -R "{{ item }}"
       loop: "{{ inventory }}"
       ignore_errors: yes
       delegate_to: localhost

     # install 
     - name: Ensure all instances are reachable
       wait_for:
         host: "{{ item }}"
         port: 22
         state: started
         delay: 10
       loop: "{{ inventory }}"
       delegate_to: localhost
   
     - name: Distribute public SSH key to all instances
       authorized_key:
         user: ubuntu
         state: present
         key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
       loop: "{{ inventory }}"
       delegate_to: localhost
       become: yes
   
     - name: Test SSH connectivity
       command: ssh -o StrictHostKeyChecking=no -i /root/.ssh/boot-1.pem ubuntu@{{ item }} echo "Connected"
       register: ssh_test
       ignore_errors: yes
       loop: "{{ inventory }}"
       delegate_to: localhost

     - name: Print SSH connectivity results
       debug:
         msg: "{{ ssh_test.results }}"



# ---
# - name: Ensure SSH key pair exists
#   hosts: localhost
#   gather_facts: no
#   become: yes

#   tasks:
#     - name: Generate SSH key pair if not exists
#       user: ubuntu
#       ssh_keygen:
#         key_type: ed25519
#         type: rsa
#         force: yes
#       when: not ssh_keygen.stat.exists

#     - name: Add SSH key to agent
#       user: ubuntu
#       authorized_key:
#         user: ubuntu
#         key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
#         append: yes

#     - name: Copy public key to master
#       copy:
#         src: ~/.ssh/id_rsa.pub
#         dest: /tmp/id_rsa.pub
#         remote_user: ubuntu
#         host: master
#         become: yes

#     - name: Add public key to authorized_keys on master
#       command: echo "{{ lookup('file', '/tmp/id_rsa.pub') }}" >> /home/ubuntu/.ssh/authorized_keys
#       remote_user: ubuntu
#       host: master
#       become: yes

#     - name: Change permissions for authorized_keys
#       file:
#         path: /home/ubuntu/.ssh/authorized_keys
#         owner: ubuntu
#         group: ubuntu
#         mode: '0600'
#         remote_user: ubuntu
#         host: master
#         become: yes

#     - name: Test SSH connectivity
#       command: ssh -o StrictHostKeyChecking=no ubuntu@master echo "Connected"
#       register: ssh_test

#     - name: Debug SSH test results
#       debug:
#         msg: "{{ ssh_test.stdout }}"
#       when: ssh_test.rc == 0
