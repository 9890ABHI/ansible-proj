---
- name: Install and Configure Slurm on EC2 Instances
  hosts: localhost
  gather_facts: yes
  vars_files:
    - "../compute_details.json"
  tasks:
    - name: Load compute details
      set_fact:
        compute_details: "{{ lookup('file', '../compute_details.json') | from_json }}"

    - name: Set up dynamic inventory
      set_fact:
        inventory: "{{ compute_details | map(attribute='private_ip') | list }}"


    - name: Remove old SSH host keys
      command: ssh-keygen -f '/root/.ssh/known_hosts' -R "{{ item }}"
      loop: "{{ inventory }}"
      ignore_errors: yes
      delegate_to: localhost

    # install 
    - name: Ensure all instances are reachable
      wait_for:
        host: "{{ item }}"
        port: 22
        state: started
        delay: 10
      loop: "{{ inventory }}"
      delegate_to: localhost
    
    - name: Distribute public SSH key to all instances
      authorized_key:
        user: ubuntu
        state: present
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
      loop: "{{ inventory }}"
      delegate_to: localhost
      become: yes
    
    - name: Test SSH connectivity
      command: ssh -o StrictHostKeyChecking=no -i /root/.ssh/boot-1.pem ubuntu@{{ item }} echo "Connected"
      register: ssh_test
      ignore_errors: yes
      loop: "{{ inventory }}"
      delegate_to: localhost

    - name: Print SSH connectivity results
      debug:
        msg: "{{ ssh_test.results }}"



# -------------------------------------------------------------------------------
- name: Install and Configure Slurm
  hosts: all
  become: yes
  tasks:
    - name: Install dependencies
      apt:
        name:
          - build-essential
          - libtool
          - autoconf
          - automake
          - bison
          - flex
          - libmunge-dev
          - libpam0g-dev
          - libssl-dev
          - libmariadb-dev
          - libsqlite3-dev
          - pkg-config
        state: present

    - name: Download Slurm source
      get_url:
        url: "https://download.schedmd.com/slurm/slurm-22.05.5.tar.bz2"
        dest: "/tmp/slurm-22.05.5.tar.bz2"

    - name: Extract Slurm source
      unarchive:
        src: "/tmp/slurm-22.05.5.tar.bz2"
        dest: "/tmp/"
        remote_src: yes

    - name: Build and install Slurm
      shell: |
        cd /tmp/slurm-22.05.5
        ./configure --prefix=/usr/local/slurm
        make
        make install
      args:
        chdir: /tmp/slurm-22.05.5

    - name: Create Slurm configuration directory
      file:
        path: "/etc/slurm-llnl"
        state: directory

    - name: Copy Slurm configuration file
      copy:
        src: "config/slurm/slurm.conf.j2"
        dest: "/etc/slurm-llnl/slurm.conf"
        owner: root
        group: root
        mode: '0644'
      # when: ansible_hostname == 'master'
      vars:
        master_ip: "{{ hostvars['master'].private_ip }}"

    - name: Create Slurm systemd service files
      template:
        src: "config/slurm/slurmctld.service.j2"
        dest: "/etc/systemd/system/slurmctld.service"
      when: ansible_hostname == 'master' 

    - name: Create slurmd.service file
      template:
        src: "config/slurm/slurmd.service.j2"
        dest: "/etc/systemd/system/slurmd.service"
      when: ansible_hostname != 'master'
    
    # - name: Enable and start Slurm services
    #   systemd:
    #     name: "{{ item }}"
    #     state: started
    #     enabled: yes
    #   loop:
    #     - slurmctld
    #     - slurmd

    - name: Enable and start Slurm services on master node
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - slurmctld
      when: ansible_hostname == 'master'  # or use another condition to identify the master node

    - name: Enable and start Slurm services on compute nodes
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - slurmd
      when: ansible_hostname != 'master'  # or use another condition to identify compute nodes


# -------------------------------------------------------------------------------


    # - name: Install Slurm on compute nodes
    #   apt:
    #     name:
    #       - slurm-wlm
    #       - slurm-wlm-doc
    #       - slurm-wlm-basic-plugins
    #     state: present
    #   become: yes
    #   delegate_to: "{{ item }}"
    #   loop: "{{ inventory }}"
    #   vars:
    #     ansible_ssh_user: ubuntu
    #     ansible_ssh_private_key_file: /root/.ssh/boot-1.pem

    # - name: Copy Slurm configuration files to compute nodes
    #   ansible.builtin.copy:
    #     src: "slurm/slurm.conf.j2"
    #     dest: "/etc/slurm-llnl/slurm.conf"
    #     owner: root
    #     group: root
    #     mode: '0644'
    #   become: yes
    #   delegate_to: "{{ item }}"
    #   loop: "{{ inventory }}"
    #   vars:
    #     ansible_ssh_user: ubuntu
    #     ansible_ssh_private_key_file: /root/.ssh/boot-1.pem


    # - name: Start and enable Slurm services on compute nodes
    #   ansible.builtin.systemd:
    #     name: "{{ item }}"
    #     state: started
    #     enabled: yes
    #   become: yes
    #   delegate_to: "{{ item }}"
    #   loop:
    #     - slurmctld
    #     - slurmd
    #   when: inventory | length > 0
    #   vars:
    #     ansible_ssh_user: ubuntu
    #     ansible_ssh_private_key_file: /root/.ssh/boot-1.pem


    - name: Debug
      debug:
        msg: "Slurm installation and configuration completed on all nodes."
