---
- name: Create AWS EC2 Instances and Store IPs
  hosts: localhost
  gather_facts: no
  vars:
    aws_region: "us-east-1"
    instance_type: "t2.micro"
    ami_id: "{{ lookup('env', 'IMAGE_NAME') }}"     # Replace with your desired AMI ID
    key_name: "{{ lookup('env', 'KEY_NAME') }}"     # Replace with your AWS key pair name
    subnet_id: "{{ lookup('env', 'SUBNET_NAME') }}" # Replace with your subnet ID
    num_computes: 2


  tasks:
    - name: Initialize compute_instances list
      set_fact:
        compute_instances: []

    - name: Define compute instance names
      set_fact:
        compute_instances: "{{ compute_instances + ['compute' ~ item] }}"
      loop: "{{ range(1, num_computes + 1) }}"

    - name: Define all instance names
      set_fact:
        all_instances: >
          [
            { "name": "master" }
            {% for instance in compute_instances %}
            , { "name": "{{ instance }}" }
            {% endfor %}
          ]

    # - name: Define instance configurations
    #   set_fact:
    #     compute_instances: "{{ ['compute' ~ item | string for item in range(1, num_computes + 1)] }}"
    #     all_instances: "{{ [{'name': 'master'}] + [{'name': item} for item in compute_instances] }}"
    # - name: Define instance configurations
    #   set_fact:
    #     all_instances: >
    #       [
    #         { "name": "master" } +
    #         [
    #           { "name": "compute" + item | string }
    #           for item in range(1, num_computes + 1)
    #         ]
    #       ]
    # - name: Define instance configurations
    #   set_fact:
    #     compute_instances: "{{ [range(1, num_computes + 1) | map('int') | list] }}"
    
    # - name: Create a list of instance names
    #   set_fact:
    #     all_instances: >
    #       [
    #         { "name": "master" } +
    #         [{ "name": "compute" + item | string } for item in compute_instances]
    #       ]
    #   vars:
    #     compute_instances: "{{ compute_instances | flatten }}"

    # - name: Define instance configurations
    #   set_fact:
    #     instances:
    #       - { name: "master" }
    #       - { name: "compute{{ item }}" }
    #   loop: "{{ range(1, num_computes + 1) }}"
    #   register: compute_instances

    # - name: Add master instance to the list
    #   set_fact:
    #     all_instances: "{{ [{'name': 'master'}] + compute_instances.results | map(attribute='item') | list }}"

    - name: Launch EC2 instances
      community.aws.ec2_instance:
        name: "{{ item.name }}"
        image_id: "{{ ami_id }}"
        instance_type: "{{ instance_type }}"
        key_name: "{{ key_name }}"
        region: "{{ aws_region }}"
        subnet_id: "{{ subnet_id }}"
        wait: yes
        count: 1
        tags:
          Name: "{{ item.name }}"
      loop: "{{ all_instances }}"
      register: ec2_instances

  # tasks:
  #   - name: Launch EC2 instances
  #     community.aws.ec2_instance:
  #       name: "{{ item.name }}"
  #       image_id: "{{ ami_id }}"
  #       instance_type: "{{ instance_type }}"
  #       key_name: "{{ key_name }}"
  #       region: "{{ aws_region }}"
  #       subnet_id: "{{ subnet_id }}"
  #       wait: yes
  #       count: 1
  #     with_items:
  #       - { name: "master", count: 1 }
  #       - { name: "compute1", count: 1 }
  #       - { name: "compute2", count: 1 }
  #     register: ec2_instances

    # - name: Save instance information to file
    #   ansible.builtin.copy:
    #     content: |
    #       {% for instance in ec2_instances.results %}
    #         {% for i in range(instance.instances[0].count) %}
    #           {{ instance.instances[0].tags.Name }} - {{ instance.instances[0].instances[i].private_ip_address }}
    #         {% endfor %}
    #       {% endfor %}
    #     dest: "instance-ips.txt"


    - name: Save instance information to file
      ansible.builtin.copy:
        content: |
          {% for instance in ec2_instances.results %}
            {% for inst in instance.instances %}
              {{ inst.tags.Name }} - {{ inst.private_ip_address }}
            {% endfor %}
          {% endfor %}
        dest: "../instance-ips.txt"


    - name: Initialize compute_details variable
      set_fact:
        compute_details: []

    - name: Extract compute instance details
      set_fact:
        compute_details: >-
          {{
            compute_details + [{
              'id': item.instance_ids[0],
              'private_ip': item.instances[0].private_ip_address,
              'hostname': 'compute_' + (loop.index0 + 1 | string)
            }]
          }}
      loop: "{{ compute_instances.results }}"
      when: item.instance_ids is defined and item.instances is defined
      loop_control:
        label: "{{ loop.index0 }}"

    - name: Debug compute_details
      debug:
        var: compute_details

    - name: Add instance details to /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ item.private_ip }} {{ item.hostname }}"
        state: present
      loop: "{{ compute_details }}"
      become: yes