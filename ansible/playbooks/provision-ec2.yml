---
- name: Provision EC2 instances
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Launch master EC2 instance
      amazon.aws.ec2_instance:
        name: my-ec2-master
        key_name: "{{ lookup('env', 'KEY_NAME') }}"
        region: us-east-1
        instance_type: t2.micro
        image_id: "{{ lookup('env', 'IMAGE_NAME') }}"
        wait: yes
        state: present
        subnet_id: "{{ lookup('env', 'SUBNET_NAME') }}"
        tags:
          Name: my-ec2-master
          Role: master
          Hostname: master
        security_groups: launch-wizard-11
        count: 1
      register: master_instance

    - name: Launch compute EC2 instances
      amazon.aws.ec2_instance:
        name: my-ec2-compute-{{ item }}
        key_name: "{{ lookup('env', 'KEY_NAME') }}"
        region: us-east-1
        instance_type: t2.micro
        image_id: "{{ lookup('env', 'IMAGE_NAME') }}"
        wait: yes
        state: present
        subnet_id: "{{ lookup('env', 'SUBNET_NAME') }}"
        tags:
          Name: my-ec2-compute
          Role: compute
          Hostname: compute_{{ item }}
        security_groups: launch-wizard-11
        count: 1
      loop: "{{ range(1, 3) | list }}" # Generate 2 compute nodes with unique indices
      register: compute_instances

    - name: Debug compute instances
      debug:
        var: compute_instances

    - name: Output master instance details
      debug:
        msg: "Master instance created with ID: {{ master_instance.instance_ids[0] }} and Public IP: {{ master_instance.instances[0].public_ip_address }}"

    - name: Output compute instances details
      debug:
        msg: "Compute instances created with IDs: {{ compute_instances.results | map(attribute='instance_ids') | list | flatten }} and Public IPs: {{ compute_instances.results | map(attribute='instances') | list | flatten | map(attribute='public_ip_address') | list }}"

    - name: Write IPs to inventory file
      template:
        src: inventory_template.j2
        dest: ../inventory.ini


    - name: Extract master instance details
          set_fact:
            master_details:
              id: "{{ master_instance.instance_ids[0] }}"
              private_ip: "{{ master_instance.instances[0].private_ip_address }}"
              hostname: "master"

    - name: Extract compute instance details
      set_fact:
        compute_details: "{{ compute_details | default([]) + [{'id': item.instance_ids[0], 'private_ip': item.instances[0].private_ip_address, 'hostname': 'compute_' + item.index|int|string }] }}"
      loop: "{{ compute_instances.results }}"
      when: item.instance_ids is defined and item.instances is defined

    - name: Combine all instance details
      set_fact:
        all_instance_details: "{{ [master_details] + compute_details }}"

    - name: Write IPs and hostnames to file
      copy:
        content: |
          {% for instance in all_instance_details %}
          {{ instance.private_ip }} {{ instance.hostname }}
          {% endfor %}
        dest: ./instance_ips.txt