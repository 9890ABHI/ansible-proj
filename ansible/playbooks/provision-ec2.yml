---
- name: Create AWS EC2 Instances and Store IPs
  hosts: localhost
  gather_facts: no
  vars:
    aws_region: "us-east-1"
    instance_type: "t2.micro"
    ami_id: "{{ lookup('env', 'IMAGE_NAME') }}" # Replace with your desired AMI ID
    key_name: "{{ lookup('env', 'KEY_NAME') }}" # Replace with your AWS key pair name
    subnet_id: "{{ lookup('env', 'SUBNET_NAME') }}" # Replace with your subnet ID
    num_computes: 2

  tasks:
    - name: Initialize compute_instances list
      set_fact:
        compute_instances: []

    - name: Define compute instance names
      set_fact:
        compute_instances: "{{ compute_instances + ['compute' ~ item] }}"
      loop: "{{ range(1, num_computes + 1) }}"

    - name: Define all instance names
      set_fact:
        all_instances: >
          [
            { "name": "master" }
            {% for instance in compute_instances %}
            , { "name": "{{ instance }}" }
            {% endfor %}
          ]

    - name: Launch EC2 instances
      community.aws.ec2_instance:
        name: "{{ item.name }}"
        image_id: "{{ ami_id }}"
        instance_type: "{{ instance_type }}"
        key_name: "{{ key_name }}"
        region: "{{ aws_region }}"
        subnet_id: "{{ subnet_id }}"
        security_groups: launch-wizard-11
        wait: yes
        count: 1
        tags:
          Name: "{{ item.name }}"
      loop: "{{ all_instances }}"
      register: ec2_instances

    - name: Save instance information to file
      ansible.builtin.copy:
        content: |
          {% for instance in ec2_instances.results %}
            {% for inst in instance.instances %}
              {{ inst.tags.Name }} - {{ inst.private_ip_address }}
            {% endfor %}
          {% endfor %}
        dest: "../instance-ips.txt"

    # add ip into /etc/hosts

    - name: Initialize compute_details variable
      set_fact:
        compute_details: []

    - name: Extract compute instance details
      set_fact:
        compute_details: >-
          {{
            compute_details + [{
              'id': item.instances[0].instance_id,
              'private_ip': item.instances[0].private_ip_address,
              'hostname': item.instances[0].tags.Name
            }]
          }}
      loop: "{{ ec2_instances.results }}"
      when: item.instances is defined
      loop_control:
        label: "{{ item.instances[0].tags.Name }}"

    - name: Debug compute_details
      debug:
        var: compute_details

    - name: Add instance details to /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ item.private_ip }} {{ item.hostname }}"
        state: present
      loop: "{{ compute_details }}"
      become: yes
      delegate_to: localhost

    - name: Save compute details to a JSON file
      copy:
        content: "{{ compute_details | to_nice_json }}"
        dest: "../compute_details.json"

    # - name: Install SLURM
    #   import_playbook: ./install_slurm.yml
    #   when: "'slurm' in application_choice"

    # - name: Install Hadoop
    #   import_playbook: install_hadoop.yml
    #   when: "'hadoop' in application_choice"

    # - name: Install Nagios
    #   import_playbook: install_nagios.yml
    #   when: "'nagios' in application_choice"
